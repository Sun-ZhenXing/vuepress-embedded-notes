import{_ as t,M as o,p,q as c,R as s,t as n,N as e,a1 as r}from"./framework-d3922052.js";const i={},l=s("h1",{id:"pubsubclient-使用指南",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#pubsubclient-使用指南","aria-hidden":"true"},"#"),n(" PubSubClient 使用指南")],-1),d=s("h2",{id:"_1-安装-pubsubclient",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-安装-pubsubclient","aria-hidden":"true"},"#"),n(" 1. 安装 PubSubClient")],-1),u={href:"https://github.com/knolleary/pubsubclient",target:"_blank",rel:"noopener noreferrer"},k={href:"https://pubsubclient.knolleary.net/api",target:"_blank",rel:"noopener noreferrer"},b=r(`<h2 id="_2-使用入门" tabindex="-1"><a class="header-anchor" href="#_2-使用入门" aria-hidden="true">#</a> 2. 使用入门</h2><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ESP8266WiFi.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;PubSubClient.h&gt;</span></span>

<span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> ssid <span class="token operator">=</span> <span class="token string">&quot;SSID&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> password <span class="token operator">=</span> <span class="token string">&quot;PASSWORD&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> mqtt_server <span class="token operator">=</span> <span class="token string">&quot;broker.mqtt-dashboard.com&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> TOPIC <span class="token operator">=</span> <span class="token string">&quot;home/devices/onoff/&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 标识当前设备的客户端编号</span>
<span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> client_id <span class="token operator">=</span> <span class="token string">&quot;clientId-ApjJZcy9Dh&quot;</span><span class="token punctuation">;</span>

WiFiClient espClient<span class="token punctuation">;</span>
PubSubClient <span class="token function">client</span><span class="token punctuation">(</span>espClient<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function h(v,m){const a=o("ExternalLinkIcon");return p(),c("div",null,[l,d,s("p",null,[n("在 Arduino 社区内存在很多不同版本的 PubSubClient，本文介绍的是较为经典且稳定的版本。可以查看 "),s("a",u,[n("GitHub 项目"),e(a)]),n("，作者也提供了 "),s("a",k,[n("API 文档"),e(a)]),n("。")]),b])}const f=t(i,[["render",h],["__file","pub-sub-client.html.vue"]]);export{f as default};
