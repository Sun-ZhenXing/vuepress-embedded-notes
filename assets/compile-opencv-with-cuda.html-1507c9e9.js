import{_ as c,M as t,p as i,q as r,R as a,N as s,V as l,t as n,a1 as o}from"./framework-334dfd58.js";const u={},d=a("h1",{id:"编译-cuda-支持的-opencv",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#编译-cuda-支持的-opencv","aria-hidden":"true"},"#"),n(" 编译 CUDA 支持的 OpenCV")],-1),v={class:"table-of-contents"},k=o(`<h2 id="_1-安装依赖" tabindex="-1"><a class="header-anchor" href="#_1-安装依赖" aria-hidden="true">#</a> 1. 安装依赖</h2><p>在编译之前确保你的设备已经安装了 CUDA。查看是否安装了 CUDA 和 OpenCV，以及此 OpenCV 是否有 CUDA 支持：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>jetson_release
</code></pre></div><p>确保能看到 CUDA 版本。如果没有安装 OpenCV 或 OpenCV 的 CUDA 支持为 <strong>NO</strong>，说明需要编译 CUDA 支持的 OpenCV。</p><p>卸载 OpenCV 所有组件：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> purge libopencv*
</code></pre></div><p>下面安装编译所需的基本依赖（当前 OpenCV 4.7.0，Ubuntu 18.04 编译通过，其他版本可参考，理论上通用）：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> build-essential checkinstall cmake pkg-config yasm <span class="token function">git</span> gfortran
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> libjpeg8-dev libtiff5-dev libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libxine2-dev libv4l-dev
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgtk2.0-dev libtbb2 libtbb-dev libatlas-base-dev libfaac-dev libmp3lame-dev libtheora-dev libvorbis-dev libxvidcore-dev libopencore-amrnb-dev libopencore-amrwb-dev x264 v4l-utils
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> python-dev python-numpy libjpeg-dev libpng-dev libtiff-dev
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> libjasper-dev
</code></pre></div><p>最后一个如果提示包没有找到，可以加入下面的源：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> add-apt-repository <span class="token string">&quot;deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial main multiverse restricted universe&quot;</span>
<span class="token function">sudo</span> <span class="token function">apt</span> update
</code></pre></div><h2 id="_2-编译和构建" tabindex="-1"><a class="header-anchor" href="#_2-编译和构建" aria-hidden="true">#</a> 2. 编译和构建</h2>`,11),b={href:"https://github.com/opencv/opencv/releases",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/opencv/opencv_contrib/tags",target:"_blank",rel:"noopener noreferrer"},_=o(`<p>下面是示例的目录结构：</p><ul><li><code>opencv-source/</code><ul><li><code>opencv-4.7.0/</code><ul><li><code>build/</code></li></ul></li><li><code>opencv_contrib-4.7.0/</code></li></ul></li></ul><p>现在进行编译：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> opencv-4.7.0/
<span class="token function">mkdir</span> build
<span class="token builtin class-name">cd</span> build
</code></pre></div><p>查看 <code>CUDA_ARCH_BIN</code> 的值：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/cuda/samples/1_Utilities/deviceQuery
<span class="token function">sudo</span> <span class="token function">make</span>
./deviceQuery
</code></pre></div><p>在 <strong>CUDA Capability Major/Minor version number</strong> 后面的数字即 <code>CUDA_ARCH_BIN</code> 的值。在 Jetson Nano 上查询结果为 5.3：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">CUDA_ARCH_BIN_VERSION</span><span class="token operator">=</span><span class="token number">5.3</span>
</code></pre></div><p>示例 CMake 选项：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>cmake <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DCMAKE_BUILD_TYPE</span><span class="token operator">=</span>Release <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DCMAKE_INSTALL_PREFIX</span><span class="token operator">=</span>/usr/local <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DOPENCV_ENABLE_NONFREE</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DBUILD_opencv_python3</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DWITH_FFMPEG</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DWITH_CUDA</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DCUDA_TOOLKIT_ROOT_DIR</span><span class="token operator">=</span>/usr/local/cuda <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DCUDA_ARCH_BIN</span><span class="token operator">=</span><span class="token variable">\${CUDA_ARCH_BIN_VERSION}</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DENABLE_FAST_MATH</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DCUDA_FAST_MATH</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DWITH_CUBLAS</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DOPENCV_GENERATE_PKGCONFIG</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DOPENCV_EXTRA_MODULES_PATH</span><span class="token operator">=</span><span class="token punctuation">..</span>/<span class="token punctuation">..</span>/opencv_contrib-4.7.0/modules/ <span class="token punctuation">\\</span>
    <span class="token punctuation">..</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>TODO</strong></em> 可以指定 <code>-DCUDA_ARCH_PTX=5.3</code> 和 <code>CUDA_ARCH_BIN</code> 值相同，用途和影响未知。</p><div class="hint-container info"><p class="hint-container-title">使用 Clang</p><p>经过测试，发现部分设备使用 GCC 编译套件出现各种编译或链接错误，可能是由于编译器版本过旧或者不匹配造成的，可以使用 Clang 代替：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> clang
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> lld-10 liblld-10

<span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-f</span> /usr/bin/lld-10 /usr/bin/lld
</code></pre></div><p>请检查是否有新版本的 LLD，当前测试的镜像最新版本为 LLD-10，可以加入其他镜像来更新 LLD。</p><p>CMake 指令如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>cmake <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DCMAKE_BUILD_TYPE</span><span class="token operator">=</span>Release <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DCMAKE_CXX_COMPILER</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">which</span> clang++<span class="token variable">)</span></span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DCMAKE_C_COMPILER</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">which</span> clang<span class="token variable">)</span></span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DCMAKE_LINKER</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">which</span> lld<span class="token variable">)</span></span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DCMAKE_INSTALL_PREFIX</span><span class="token operator">=</span>/usr/local <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DOPENCV_ENABLE_NONFREE</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DBUILD_opencv_python3</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DWITH_FFMPEG</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DWITH_CUDA</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DCUDA_TOOLKIT_ROOT_DIR</span><span class="token operator">=</span>/usr/local/cuda <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DCUDA_ARCH_BIN</span><span class="token operator">=</span><span class="token variable">\${CUDA_ARCH_BIN_VERSION}</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DENABLE_FAST_MATH</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DCUDA_FAST_MATH</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DWITH_CUBLAS</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DOPENCV_GENERATE_PKGCONFIG</span><span class="token operator">=</span>ON <span class="token punctuation">\\</span>
    <span class="token parameter variable">-DOPENCV_EXTRA_MODULES_PATH</span><span class="token operator">=</span><span class="token punctuation">..</span>/<span class="token punctuation">..</span>/opencv_contrib-4.7.0/modules/ <span class="token punctuation">\\</span>
    <span class="token punctuation">..</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>下面进行编译：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token variable"><span class="token variable">$(</span>nproc<span class="token variable">)</span></span>
</code></pre></div><p>此过程较长，预计需要几个小时。</p><p>安装：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span>
</code></pre></div><p>如果此时没有错误，可以用 <code>jetson_release</code> 查询到安装成功：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>jetson_release
</code></pre></div><p>查询结果：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">Model</span><span class="token punctuation">:</span> NVIDIA Jetson Nano Developer Kit <span class="token punctuation">-</span> Jetpack 4.6.3 <span class="token punctuation">[</span>L4T 32.7.3<span class="token punctuation">]</span>
<span class="token key atrule">NV Power Mode</span><span class="token punctuation">:</span> <span class="token key atrule">MAXN - Type</span><span class="token punctuation">:</span> <span class="token number">0</span>
<span class="token key atrule">jtop</span><span class="token punctuation">:</span>
 <span class="token punctuation">-</span> <span class="token key atrule">Version</span><span class="token punctuation">:</span> 4.1.0
 <span class="token punctuation">-</span> <span class="token key atrule">Service</span><span class="token punctuation">:</span> Active
<span class="token key atrule">Libraries</span><span class="token punctuation">:</span>
 <span class="token punctuation">-</span> <span class="token key atrule">CUDA</span><span class="token punctuation">:</span> 10.2.300
 <span class="token punctuation">-</span> <span class="token key atrule">cuDNN</span><span class="token punctuation">:</span> 8.2.1.32
 <span class="token punctuation">-</span> <span class="token key atrule">TensorRT</span><span class="token punctuation">:</span> 4.6.3
 <span class="token punctuation">-</span> <span class="token key atrule">VPI</span><span class="token punctuation">:</span> 1.2.3
 <span class="token punctuation">-</span> <span class="token key atrule">Vulkan</span><span class="token punctuation">:</span> 1.2.70
 <span class="token punctuation">-</span> <span class="token key atrule">OpenCV</span><span class="token punctuation">:</span> <span class="token key atrule">4.7.0 - with CUDA</span><span class="token punctuation">:</span> YES
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21);function h(g,C){const e=t("router-link"),p=t("ExternalLinkIcon");return i(),r("div",null,[d,a("nav",v,[a("ul",null,[a("li",null,[s(e,{to:"#_1-安装依赖"},{default:l(()=>[n("1. 安装依赖")]),_:1})]),a("li",null,[s(e,{to:"#_2-编译和构建"},{default:l(()=>[n("2. 编译和构建")]),_:1})])])]),k,a("p",null,[n("下载 "),a("a",b,[n("OpenCV: Releases"),s(p)]),n(" 和 "),a("a",m,[n("OpenCV_Contrib: Tags"),s(p)]),n(" 下载相同版本的代码，并解压到同一个文件夹下：")]),_])}const f=c(u,[["render",h],["__file","compile-opencv-with-cuda.html.vue"]]);export{f as default};
