import{_ as p,M as c,p as l,q as r,R as a,N as n,V as t,t as s,a1 as i}from"./framework-8980b429.js";const d={},u=a("h1",{id:"开始使用-rock-3a",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#开始使用-rock-3a","aria-hidden":"true"},"#"),s(" 开始使用 Rock 3A")],-1),h={class:"table-of-contents"},k=a("h2",{id:"_1-烧录系统",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-烧录系统","aria-hidden":"true"},"#"),s(" 1. 烧录系统")],-1),b={class:"hint-container tip"},f=a("p",{class:"hint-container-title"},"下载系统",-1),g={href:"https://github.com/radxa-build/rock-3a",target:"_blank",rel:"noopener noreferrer"},m=a("p",null,"下载系统镜像，建议使用 Debian/Ubuntu 镜像，因为 RKNPU/RKNN_Toolkit 对于 Debian 系列系统支持最好。并且不要使用预发布的版本，部分驱动可能不稳定或无法使用。",-1),v=a("code",null,"rock-3a-debian-bullseye-xfce4-arm64-20xxxxxx-xxxx-gpt.img.xz",-1),_={href:"https://rufus.ie/zh/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.balena.io/etcher/",target:"_blank",rel:"noopener noreferrer"},y=i(`<p>将 SD 卡插入到主板的 SD 卡槽，连接网线和电源。如果有显示屏更好，可以直接通过命令得到 IP 信息。</p><p>如果没有显示屏，可能需要尝试几种方法获取 Rock 的 IP 地址。如果当前系统支持 mDNS，则可以通过下面的方式获取 IP：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">ping</span> rock3a.local
</code></pre></div><p>如果没有错误，测试一下 SSH 能否正确连接：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> rock@rock3a.local
</code></pre></div><p>如果不能使用这种方法，可以通过端口搜索或扫描，或者查看路由器管理界面，可以得到其 IP 地址，然后使用 SSH 连接即可。SSH 连接命令：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> rock@<span class="token operator">&lt;</span>ip<span class="token operator">&gt;</span>
</code></pre></div><p>默认的账号和密码都是 <code>rock</code>。</p><div class="hint-container info"><p class="hint-container-title">设备对应的设备表</p><p>参见参考文献。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><table><thead><tr><th>镜像烧录方式</th><th>设备</th></tr></thead><tbody><tr><td>eMMC</td><td><code>/dev/mmcblk0</code></td></tr><tr><td>SD Card</td><td><code>/dev/mmcblk1</code></td></tr><tr><td>NVME M.2 SDD</td><td><code>/dev/nvme0n1</code></td></tr></tbody></table></div><h2 id="_2-基本功能安装" tabindex="-1"><a class="header-anchor" href="#_2-基本功能安装" aria-hidden="true">#</a> 2. 基本功能安装</h2><h3 id="_2-1-更新源和内核" tabindex="-1"><a class="header-anchor" href="#_2-1-更新源和内核" aria-hidden="true">#</a> 2.1 更新源和内核</h3><p>这一小节以 Debian 为例。</p><p>各种查看系统内核版本和发行版本的命令：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">uname</span> <span class="token parameter variable">-a</span>
hostnamectl

<span class="token function">cat</span> /etc/issue
<span class="token function">cat</span> /etc/os-release
<span class="token function">cat</span> /etc/debian_version
</code></pre></div><p>添加官方秘钥：<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-O</span> -  apt.radxa.com/stretch/public.key <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -
</code></pre></div><p>系统的软件源列表更新：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;deb https://mirrors.aliyun.com/debian/ bullseye main non-free contrib
#deb-src https://mirrors.aliyun.com/debian/ bullseye main non-free contrib
deb https://mirrors.aliyun.com/debian-security/ bullseye-security main
#deb-src https://mirrors.aliyun.com/debian-security/ bullseye-security main
deb https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib
#deb-src https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib
deb https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib
#deb-src https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib

deb http://apt.radxa.com/buster-stable/ buster main
deb http://apt.radxa.com/buster-testing/ buster main
deb http://apt.radxa.com/stretch/ stretch main&#39;</span> <span class="token operator">&gt;</span> /etc/apt/sources.list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更新系统功能命令，注意需要保持 Linux 内核版本和其包版本一致。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> rockchip-overlay
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> linux-4.19-rock-3-latest
</code></pre></div><p>如果下载较慢，可以使用局域网代理，将 <code>&lt;ip&gt;</code> 和 <code>&lt;port&gt;</code> 替换为你的代理主机信息：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">http_proxy</span><span class="token operator">=</span>http://<span class="token operator">&lt;</span>ip<span class="token operator">&gt;</span>:<span class="token operator">&lt;</span>port<span class="token operator">&gt;</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">https_proxy</span><span class="token operator">=</span>socks://<span class="token operator">&lt;</span>ip<span class="token operator">&gt;</span>:<span class="token operator">&lt;</span>port<span class="token operator">&gt;</span>
</code></pre></div><h3 id="_2-2-ubuntu-安装桌面" tabindex="-1"><a class="header-anchor" href="#_2-2-ubuntu-安装桌面" aria-hidden="true">#</a> 2.2 Ubuntu 安装桌面</h3><p>这是可选功能，如果您确实有需要则可以安装，安装过程较慢。Ubuntu 镜像默认没有桌面，安装桌面命令：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> ubuntu-mate-core
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> ubuntu-mate-desktop
</code></pre></div><h3 id="_2-3-个性化配置" tabindex="-1"><a class="header-anchor" href="#_2-3-个性化配置" aria-hidden="true">#</a> 2.3 个性化配置</h3><p>支持常见命令简写 <code>ll</code>、<code>la</code>、<code>l</code>：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;alias ll=&#39;ls -alF&#39;
alias la=&#39;ls -A&#39;
alias l=&#39;ls -CF&#39;&quot;</span> <span class="token operator">&gt;&gt;</span> ~/.bashrc
<span class="token builtin class-name">source</span> ~/.bashrc
</code></pre></div><h2 id="_3-开启-npu" tabindex="-1"><a class="header-anchor" href="#_3-开启-npu" aria-hidden="true">#</a> 3. 开启 NPU</h2><p>NPU 在新版本镜像中没有被默认开启，需要开启 NPU 引导。如果不确定系统有没有引导 NPU，则查看配置：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">dmesg</span> <span class="token operator">|</span> <span class="token function">grep</span> rknpu
</code></pre></div><p>检查内核版本：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">uname</span> <span class="token parameter variable">-a</span>
</code></pre></div><p>得到：</p><div class="language-txt" data-ext="txt"><pre class="language-txt"><code>Linux rock-3a 4.19.193-58-rockchip-gbac1feba87f0 #rockchip SMP Tue Oct 18 09:36:57 UTC 2022 aarch64 aarch64 aarch64 GNU/Linux
</code></pre></div><p>发现内核版本是 <code>4.19</code>，尝试安装或更新内核：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> linux-4.19-rock-3-latest
</code></pre></div><p>注释 <code>/boot/config.txt</code> 文件内的禁用 NPU 配置：</p><div class="language-properties" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># dtoverlay=rk3568-disable-npu</span>
</code></pre></div><p>然后更新 extlinux，然后重启：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> update_extlinux.sh

<span class="token function">sudo</span> <span class="token function">reboot</span>
</code></pre></div><p>重启后检查 NPU 有没有正常启动：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">dmesg</span> <span class="token operator">|</span> <span class="token function">grep</span> rknpu
</code></pre></div><p>可以看到很多关于 NPU 的引导日志说明启动成功。</p><h2 id="_4-初始化-rknn-服务" tabindex="-1"><a class="header-anchor" href="#_4-初始化-rknn-服务" aria-hidden="true">#</a> 4. 初始化 RKNN 服务</h2><p>镜像内没有 RKNN 服务，部分 NPU 功能可能无法使用，下面的命令将给系统安装此服务：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/rockchip-linux/rknpu2 <span class="token parameter variable">--depth</span> <span class="token number">1</span>

<span class="token function">pushd</span> rknpu2/runtime/RK356X/Linux/librknn_api/aarch64
<span class="token function">sudo</span> <span class="token function">cp</span> * /usr/lib/
<span class="token function">popd</span>

<span class="token function">pushd</span> rknpu2/runtime/RK356X/Linux/rknn_server/aarch64/usr/bin
<span class="token function">sudo</span> <span class="token function">cp</span> * /usr/bin/
<span class="token function">popd</span>
</code></pre></div><p>然后使用 root 权限启动 RKNN 服务：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> +x /usr/bin/rknn_server
<span class="token function">chmod</span> +x /usr/bin/start_rknn.sh
<span class="token function">chmod</span> +x /usr/bin/restart_rknn.sh
restart_rknn.sh
</code></pre></div><h2 id="_5-开启串口通信" tabindex="-1"><a class="header-anchor" href="#_5-开启串口通信" aria-hidden="true">#</a> 5. 开启串口通信</h2><p>在 <code>/boot/config.txt</code> 中定义了启动时引导的设备，如果需要 I2C、PWM、SPI、UART、CAN 等串口控制器，请确保 <code>overlays</code> 值正确。</p><h3 id="_5-1-i2c" tabindex="-1"><a class="header-anchor" href="#_5-1-i2c" aria-hidden="true">#</a> 5.1 I2C</h3><div class="language-properties" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">overlays</span><span class="token punctuation">=</span><span class="token value attr-value">rk3568-i2c2-m0</span>
<span class="token key attr-name">overlays</span><span class="token punctuation">=</span><span class="token value attr-value">rk3568-i2c3-m0</span>
</code></pre></div><h3 id="_5-2-pwm" tabindex="-1"><a class="header-anchor" href="#_5-2-pwm" aria-hidden="true">#</a> 5.2 PWM</h3><div class="language-properties" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">overlays</span><span class="token punctuation">=</span><span class="token value attr-value">rk3568-pwm0-m0</span>
<span class="token key attr-name">overlays</span><span class="token punctuation">=</span><span class="token value attr-value">rk3568-pwm0-m1</span>
<span class="token key attr-name">overlays</span><span class="token punctuation">=</span><span class="token value attr-value">rk3568-pwm1-m1</span>
</code></pre></div><p>启动时自动生成 <code>/sys/devices/platform/fdd70000.pwm/pwm/pwmchip*</code>。</p><h3 id="_5-3-uart" tabindex="-1"><a class="header-anchor" href="#_5-3-uart" aria-hidden="true">#</a> 5.3 UART</h3><p>使得设备 <code>/dev/ttyS2</code> 作为调试控制台：</p><div class="language-properties" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">overlays</span><span class="token punctuation">=</span><span class="token value attr-value">rk3568-fiq-debugger-uart2m0</span>
</code></pre></div><p>使得设备 <code>/dev/ttyS2</code> 作为标准命令行输出到 UART，需要开启：</p><div class="language-properties" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">overlays</span><span class="token punctuation">=</span><span class="token value attr-value">rk3568-uart2-m0</span>
</code></pre></div><hr class="footnotes-sep">`,62),N={class:"footnotes"},U={class:"footnotes-list"},R={id:"footnote1",class:"footnote-item"},P={href:"https://wiki.radxa.com/Rock3/Debian",target:"_blank",rel:"noopener noreferrer"},S=a("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1),w={id:"footnote2",class:"footnote-item"},D={href:"http://apt.radxa.com/",target:"_blank",rel:"noopener noreferrer"},C=a("a",{href:"#footnote-ref2",class:"footnote-backref"},"↩︎",-1);function I(K,M){const e=c("router-link"),o=c("ExternalLinkIcon");return l(),r("div",null,[u,a("nav",h,[a("ul",null,[a("li",null,[n(e,{to:"#_1-烧录系统"},{default:t(()=>[s("1. 烧录系统")]),_:1})]),a("li",null,[n(e,{to:"#_2-基本功能安装"},{default:t(()=>[s("2. 基本功能安装")]),_:1}),a("ul",null,[a("li",null,[n(e,{to:"#_2-1-更新源和内核"},{default:t(()=>[s("2.1 更新源和内核")]),_:1})]),a("li",null,[n(e,{to:"#_2-2-ubuntu-安装桌面"},{default:t(()=>[s("2.2 Ubuntu 安装桌面")]),_:1})]),a("li",null,[n(e,{to:"#_2-3-个性化配置"},{default:t(()=>[s("2.3 个性化配置")]),_:1})])])]),a("li",null,[n(e,{to:"#_3-开启-npu"},{default:t(()=>[s("3. 开启 NPU")]),_:1})]),a("li",null,[n(e,{to:"#_4-初始化-rknn-服务"},{default:t(()=>[s("4. 初始化 RKNN 服务")]),_:1})]),a("li",null,[n(e,{to:"#_5-开启串口通信"},{default:t(()=>[s("5. 开启串口通信")]),_:1}),a("ul",null,[a("li",null,[n(e,{to:"#_5-1-i2c"},{default:t(()=>[s("5.1 I2C")]),_:1})]),a("li",null,[n(e,{to:"#_5-2-pwm"},{default:t(()=>[s("5.2 PWM")]),_:1})]),a("li",null,[n(e,{to:"#_5-3-uart"},{default:t(()=>[s("5.3 UART")]),_:1})])])])])]),k,a("div",b,[f,a("p",null,[s("从 "),a("a",g,[s("官方 GitHub 仓库"),n(o)]),s(" 可以下载系统，并获得系统镜像的有关信息。")]),m]),a("p",null,[s("下载得到类似 "),v,s(" 的文件，使用 "),a("a",_,[s("Rufus"),n(o)]),s(" 或者 "),a("a",x,[s("balenaEtcher"),n(o)]),s(" 等烧录软件，烧录下载得到的镜像文件到 U 盘或者 SD 卡。")]),y,a("section",N,[a("ol",U,[a("li",R,[a("p",null,[s("Work with ROCK 3 Debian，Radxa Wiki，"),a("a",P,[s("https://wiki.radxa.com/Rock3/Debian"),n(o)]),s(),S])]),a("li",w,[a("p",null,[s("radxa debian packages repository，"),a("a",D,[s("http://apt.radxa.com/"),n(o)]),s(),C])])])])])}const A=p(d,[["render",I],["__file","get-started.html.vue"]]);export{A as default};
