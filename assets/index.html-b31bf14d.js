import{_ as p,M as a,p as c,q as i,R as n,t as s,N as o,V as l,a1 as r}from"./framework-35149b8f.js";const u={},d=n("h1",{id:"_1-点亮-led",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-点亮-led","aria-hidden":"true"},"#"),s(" 1. 点亮 LED")],-1),h={class:"custom-container tip"},k=n("p",{class:"custom-container-title"},"阅读提示",-1),_=n("h2",{id:"_1-1-micropython-环境搭建",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-1-micropython-环境搭建","aria-hidden":"true"},"#"),s(" 1.1 MicroPython 环境搭建")],-1),m={href:"https://thonny.org/",target:"_blank",rel:"noopener noreferrer"},y=r(`<p>请访问上面的官网，然后下载到你的系统并安装，安装后可以通过如下方法设置 Pico 环境：</p><ol><li>将树莓派 Pico 插入到你的电脑，确保驱动最新</li><li>打开 Thonny</li><li>点击 <strong>运行</strong> -&gt; <strong>选择解释器</strong>，然后选择解释器为 <strong>MicroPython (Raspberry Pi Pico)</strong></li></ol><p>此时如果没有异常，会出现 Shell 窗口，如果没有 Shell 窗口，点击 <strong>窗口</strong> -&gt; <strong>Shell</strong> 可以打开 Shell 窗口。</p><p>你可以在交互式窗口内执行 Python 解释器，你输入的代码都会通过串口发送到 Pico，再由 Pico 执行返回。</p><h2 id="_1-2-烧录代码" tabindex="-1"><a class="header-anchor" href="#_1-2-烧录代码" aria-hidden="true">#</a> 1.2 烧录代码</h2><p>将下面的代码保存为 <code>main.py</code>，选择保存到 Pico 上。</p><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> machine <span class="token keyword">import</span> Pin
<span class="token keyword">import</span> utime

led <span class="token operator">=</span> Pin<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span> Pin<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span>
<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
    led<span class="token punctuation">.</span>value<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    utime<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    led<span class="token punctuation">.</span>value<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    utime<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre></div><p>点击绿色的执行按钮，可以直接执行上述代码。可以看到 Pico 上的 LED 灯每隔 1 秒变化一次。</p>`,8);function P(g,f){const t=a("RouterLink"),e=a("ExternalLinkIcon");return c(),i("div",null,[d,n("div",h,[k,n("p",null,[s("如果没有阅读 "),o(t,{to:"/raspberrypi-pico/intro/"},{default:l(()=>[s("Pico 介绍")]),_:1}),s("，请首先阅读 Pico 的基本信息，然后将 MicroPython 烧录到 Pico 内，下面开始使用 Pico。")])]),_,n("p",null,[s("官方推荐使用 "),n("a",m,[s("Thonny"),o(e)]),s(" 开发 Pico，这里也是以 Thonny 为例开发。所以我们需要先安装 Thonny。")]),y])}const b=p(u,[["render",P],["__file","index.html.vue"]]);export{b as default};
