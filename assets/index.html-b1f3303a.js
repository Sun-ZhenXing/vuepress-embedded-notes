import{_ as n,p as s,q as a,a1 as t}from"./framework-cdc56dbd.js";const e={},p=t(`<h1 id="_6-串口外设接收数据" tabindex="-1"><a class="header-anchor" href="#_6-串口外设接收数据" aria-hidden="true">#</a> 6. 串口外设接收数据</h1><nav class="table-of-contents"><ul></ul></nav><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> machine <span class="token keyword">import</span> UART<span class="token punctuation">,</span> Pin

uart <span class="token operator">=</span> UART<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> baudrate<span class="token operator">=</span><span class="token number">115200</span><span class="token punctuation">,</span> bits<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> parity<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
            stop<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> tx<span class="token operator">=</span>Pin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rx<span class="token operator">=</span>Pin<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
    flag <span class="token operator">=</span> uart<span class="token punctuation">.</span><span class="token builtin">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> flag <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
        received <span class="token operator">=</span> uart<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>
        uart<span class="token punctuation">.</span>write<span class="token punctuation">(</span>received<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","index.html.vue"]]);export{r as default};
